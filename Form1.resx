<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uH8AJJLW1DLiC74IUSSSxTI6j//Z
</value>
  </data>
</root>